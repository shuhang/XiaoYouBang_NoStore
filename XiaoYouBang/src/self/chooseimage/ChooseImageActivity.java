package self.chooseimage;import java.io.File;import java.io.FilenameFilter;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.Comparator;import java.util.List;import android.app.Activity;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.view.Window;import android.widget.Button;import android.widget.GridView;import android.widget.Toast;import com.pku.xiaoyoubang.R;import com.pku.xiaoyoubang.tool.MyApplication;import com.pku.xiaoyoubang.tool.Tool;import com.pku.xiaoyoubang.view.AddPictureActivity;public class ChooseImageActivity extends Activity{	/**	 * 图片数量最多的文件夹	 */	private File mImgDir;	/**	 * 所有的图片	 */	private List<String> mImgs = new ArrayList<String>();	private GridView mGirdView;	private MyAdapter mAdapter;		private Button buttonBack;	private Button buttonFinish;		protected void onCreate(Bundle savedInstanceState)	{		super.onCreate(savedInstanceState);		requestWindowFeature( Window.FEATURE_NO_TITLE );		MyApplication.getInstance().addActivity( this );		setContentView(R.layout.choose_image);		initView();				selected( FileListActivity.mImageFloders.get( FileListActivity.selected ) );				buttonBack = ( Button ) findViewById( R.id.choose_image_button_back );		buttonBack.setText( "<  " );		buttonBack.setOnClickListener		(			new OnClickListener()			{				public void onClick( View view )				{					if( Tool.isFastDoubleClick() )					{						return;					}					finish();				}			}		);				buttonFinish = ( Button ) findViewById( R.id.choose_image_button_finish );		buttonFinish.setOnClickListener		(			new OnClickListener()			{				public void onClick( View view )				{					if( Tool.isFastDoubleClick() )					{						return;					}					if( MyAdapter.mSelectedImage.size() + AddPictureActivity.totalCount > 9 )					{						showError( "最多选择9张照片" );						return;					}					setResult( 1 );					finish();				}			}		);	}	private void initView()	{		mGirdView = (GridView) findViewById(R.id.id_gridView);	}		private void showError( String text )	{		Toast.makeText( this, text, Toast.LENGTH_SHORT ).show();	}		private class FileComparator implements Comparator<File>	{		public int compare( File lhs, File rhs ) 		{  		    if( lhs.lastModified() < rhs.lastModified() )		    {  		        return 1;//最后修改的照片在前  		    }		    else		    {  		        return -1;  		    }  		}	}	public void selected(ImageFloder floder)	{		mImgDir = new File( floder.getDir() );		List< File > fileList = Arrays.asList( mImgDir.listFiles( new FilenameFilter()		{			public boolean accept( File dir, String filename )			{				if(        filename.endsWith(".jpg")						|| filename.endsWith(".PNG")						|| filename.endsWith(".JPG")						|| filename.endsWith(".JPEG")						|| filename.endsWith(".png")						|| filename.endsWith(".jpeg"))					return true;				return false;			}		}));		Collections.sort( fileList, new FileComparator() );		for( File file : fileList )		{			mImgs.add( file.getName() );		}		/**		 * 可以看到文件夹的路径和图片的路径分开保存，极大的减少了内存的消耗；		 */		mAdapter = new MyAdapter( getApplicationContext(), mImgs, R.layout.grid_item, mImgDir.getAbsolutePath() );		mGirdView.setAdapter( mAdapter );	}}