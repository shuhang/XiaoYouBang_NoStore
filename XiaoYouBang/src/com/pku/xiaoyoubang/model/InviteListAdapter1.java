package com.pku.xiaoyoubang.model;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;import com.pku.xiaoyoubang.R;import com.pku.xiaoyoubang.entity.InviteEntity;import com.pku.xiaoyoubang.tool.Information;import com.pku.xiaoyoubang.tool.Tool;public class InviteListAdapter1 extends BaseAdapter{	private Context context;	private List< InviteEntity > list;	private ImageLoader imageLoader;	private DisplayImageOptions options;		public InviteListAdapter1( Context context, List< InviteEntity > list )	{		this.context = context;		this.list = list;				ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder( context ).build();		ImageLoader.getInstance().init( config );				this.options = new DisplayImageOptions.Builder()		.showImageOnLoading( R.drawable.head )		.showImageForEmptyUri( R.drawable.head )		.showImageOnFail( R.drawable.head )		.cacheInMemory( true )		.cacheOnDisk( true )		.build();		this.imageLoader = ImageLoader.getInstance();	} 		public int getCount() 	{		return list.size();	}	public Object getItem( int position ) 	{		return list.get( position );	}	public long getItemId( int position ) 	{		return position;	}	public View getView( int position, View convertView, ViewGroup parent )	{		ViewHolder viewHolder;		if( convertView == null )		{			convertView = LayoutInflater.from( context ).inflate( R.layout.other_inivite_me_list_item, null );			viewHolder = new ViewHolder();						viewHolder.headImage = ( ImageView ) convertView.findViewById( R.id.other_invite_me_head );			viewHolder.textName = ( TextView ) convertView.findViewById( R.id.other_invite_me_name );			viewHolder.textTime = ( TextView ) convertView.findViewById( R.id.other_invite_me_time );			viewHolder.textInviteInfo = ( TextView ) convertView.findViewById( R.id.other_invite_me_info );			viewHolder.line = ( View ) convertView.findViewById( R.id.other_invite_me_line );						convertView.setTag( viewHolder );		}		else		{			viewHolder = ( ViewHolder ) convertView.getTag(); 		}				InviteEntity entity = list.get( position );		imageLoader.displayImage( Information.Server_Url + entity.getHeadUrl(), viewHolder.headImage, options );		viewHolder.textName.setText( entity.getName() + "邀请你回答" );		viewHolder.textTime.setText( Tool.getShowTime( entity.getTime() ) );		viewHolder.textInviteInfo.setText( entity.getInviteInfo() );				if( position == list.size() - 1 )		{			viewHolder.line.setVisibility( View.INVISIBLE );		}		else		{			viewHolder.line.setVisibility( View.VISIBLE );		}				return convertView;	}		static class ViewHolder	{		ImageView headImage;		TextView textName;		TextView textTime;		TextView textInviteInfo;		View line;	}}