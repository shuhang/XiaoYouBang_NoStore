package com.pku.xiaoyoubang.model;import java.io.FileInputStream;import java.util.List;import android.content.Context;import android.graphics.BitmapFactory;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.nostra13.universalimageloader.core.ImageLoader;import com.pku.xiaoyoubang.R;import com.pku.xiaoyoubang.tool.Information;public class ImageGridAdapter extends BaseAdapter{	private Context context;	private List< String > list1;	private List< String > list2;	private ImageClickListener listener;		public ImageGridAdapter( Context context, List< String > list1, List< String > list2 )	{		this.context = context;		this.list1 = list1;		this.list2 = list2;	}		public int getCount() 	{		if( list1.size() > 9 )			return 9;		return list1.size();	}	@Override	public Object getItem(int position) 	{		return list1.get( position );	}	@Override	public long getItemId(int position) {		return 0;	}	@Override	public View getView(final int position, View convertView, ViewGroup parent) 	{		if( convertView == null )		{			convertView = LayoutInflater.from( context ).inflate( R.layout.image_grid_item, null );		}		ImageView image = ( ImageView ) convertView.findViewById( R.id.image_grid_item_image );		TextView text = ( TextView ) convertView.findViewById( R.id.image_grid_item_text );				image.setOnClickListener		(			new OnClickListener()			{				@Override				public void onClick(View v) {					listener.clickImage( list1.get( position ) );				}							}		);				if( list1.get( position ).equals( "" ) )		{			image.setImageResource( R.drawable.add_picture );		}		else		{			if( list1.get( position ).startsWith( Information.Temp_Image_Path ) )			{				image.setImageBitmap( BitmapFactory.decodeFile( list1.get( position ) ) );				text.setVisibility( View.VISIBLE );				try				{										FileInputStream stream = new FileInputStream( list2.get( position ) );					text.setText( stream.available() / 1000 + "k" );					stream.close();				}				catch( Exception ex ) {}			}			else			{				ImageLoader.getInstance().displayImage( Information.Server_Url + list1.get( position ), image, Information.options_image_small );			}		}		return convertView;	}		public void setListener( ImageClickListener listener )	{		this.listener = listener;	}		public interface ImageClickListener	{		public void clickImage( String url );	}}