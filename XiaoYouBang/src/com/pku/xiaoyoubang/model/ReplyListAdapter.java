package com.pku.xiaoyoubang.model;import java.util.List;import android.content.Context;import android.text.Spannable;import android.text.SpannableStringBuilder;import android.text.style.ForegroundColorSpan;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import com.nostra13.universalimageloader.core.ImageLoader;import com.pku.xiaoyoubang.R;import com.pku.xiaoyoubang.entity.ReplyEntity;import com.pku.xiaoyoubang.tool.Information;import com.pku.xiaoyoubang.tool.Tool;public class ReplyListAdapter extends BaseAdapter{	private Context context;	private List< ReplyEntity > list;	private ImageLoader imageLoader;		public ReplyListAdapter( Context context, List< ReplyEntity > list )	{		this.context = context;		this.list = list;		this.imageLoader = ImageLoader.getInstance();	}		public List< ReplyEntity > getList()	{		return list;	}	public int getCount() 	{		return list.size();	}	public ReplyEntity getItem( int position )	{		return list.get( position );	}	public long getItemId( int position )	{		return position;	}	public View getView( int position, View convertView, ViewGroup parent ) 	{		ViewHolder viewHolder;		if( convertView == null )		{			convertView = LayoutInflater.from( context ).inflate( R.layout.reply_list_item, null );			viewHolder = new ViewHolder();			convertView.setTag( viewHolder );						viewHolder.headImage = ( ImageView ) convertView.findViewById( R.id.reply_list_item_head );			viewHolder.textName = ( TextView ) convertView.findViewById( R.id.reply_list_item_name );			viewHolder.textTitle = ( TextView ) convertView.findViewById( R.id.reply_list_item_title_name1 );			viewHolder.textTitleTemp = ( TextView ) convertView.findViewById( R.id.reply_list_item_title_temp );			viewHolder.textTime = ( TextView ) convertView.findViewById( R.id.reply_list_item_time );			viewHolder.textInfo = ( TextView ) convertView.findViewById( R.id.reply_list_item_info );			viewHolder.layout = ( RelativeLayout ) convertView.findViewById( R.id.reply_list_item_layout );		}		else		{			viewHolder = ( ViewHolder ) convertView.getTag();		}				ReplyEntity entity = list.get( position );		imageLoader.displayImage( Information.Server_Url + entity.getHeadUrl(), viewHolder.headImage, Information.options );				if( entity.isActInvite() )		{			String value = entity.getReplyUserName() + " 邀请我参加活动";						SpannableStringBuilder builder = new SpannableStringBuilder( value );			ForegroundColorSpan blackSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.black ) );			ForegroundColorSpan redSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.text_red ) );			builder.setSpan( blackSpan, 0, entity.getReplyUserName().length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE );  			builder.setSpan( redSpan, entity.getReplyUserName().length() + 1, value.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE );						viewHolder.textName.setText( builder );						viewHolder.textTitle.setText( entity.getTitleUserName() + "：" + entity.getTitle() );			viewHolder.textTitleTemp.setVisibility( View.VISIBLE );			viewHolder.textTitleTemp.setText( "活动 " );						viewHolder.textInfo.setText( entity.getInfo() );			viewHolder.layout.setBackgroundResource( R.drawable.reply_list_item_bg );		}		else if( entity.isInvite() )		{			String value = entity.getReplyUserName() + " 邀请我回答";						SpannableStringBuilder builder = new SpannableStringBuilder( value );			ForegroundColorSpan blackSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.black ) );			ForegroundColorSpan redSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.text_red ) );			builder.setSpan( blackSpan, 0, entity.getReplyUserName().length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE );  			builder.setSpan( redSpan, entity.getReplyUserName().length() + 1, value.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE );						viewHolder.textName.setText( builder );						viewHolder.textTitle.setText( entity.getTitleUserName() + "：" + entity.getTitle() );			viewHolder.textTitleTemp.setVisibility( View.VISIBLE );			viewHolder.textTitleTemp.setText( "问 " );						viewHolder.textInfo.setText( entity.getInfo() );			viewHolder.layout.setBackgroundResource( R.drawable.reply_list_item_bg );		}		else if( entity.isInviteLogin() )		{			viewHolder.textTitleTemp.setVisibility( View.GONE );			viewHolder.textTitle.setText( " 校友录" );			viewHolder.textInfo.setText( entity.getInfo() );			String value = entity.getReplyUserName() + " 新人报到";						SpannableStringBuilder builder = new SpannableStringBuilder( value );			ForegroundColorSpan blackSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.black ) );			ForegroundColorSpan redSpan = new ForegroundColorSpan( context.getResources().getColor( R.color.text_red ) );			builder.setSpan( blackSpan, 0, entity.getReplyUserName().length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE );  			builder.setSpan( redSpan, entity.getReplyUserName().length() + 1, value.length(), Spannable.SPAN_INCLUSIVE_INCLUSIVE );						viewHolder.textName.setText( builder );			viewHolder.layout.setBackgroundResource( R.drawable.reply_list_bg_invite );		}		else		{			viewHolder.layout.setBackgroundResource( R.drawable.reply_list_item_bg );			viewHolder.textTitleTemp.setVisibility( View.VISIBLE );			viewHolder.textName.setText( entity.getReplyUserName() + " 回复我" );			viewHolder.textName.setTextColor( context.getResources().getColor( R.color.black ) );						viewHolder.textTitle.setText( entity.getTitleUserName() + "：" + entity.getTitle() );			if( entity.getType() == 0 )			{				viewHolder.textTitleTemp.setText( "问 " );			}			else			{				viewHolder.textTitleTemp.setText( "答 " );			}						viewHolder.textInfo.setText( entity.getInfo() );		}				viewHolder.textTime.setText( Tool.getShowTime( entity.getTime() ) );				return convertView;	}		static class ViewHolder	{		RelativeLayout layout;		ImageView headImage;		TextView textName;		TextView textTitle;		TextView textTitleTemp;		TextView textTime;		TextView textInfo;	}}